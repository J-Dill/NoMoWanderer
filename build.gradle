buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://plugins.gradle.org/m2/' }
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'

version = "${version_mc}_${mod_version}"
group = "${mod_group}"
archivesBaseName = "${mod_id}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets {
    gametest {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

minecraft {
    mappings channel: 'official', version: version_mc

    runs {
        client {
            workingDirectory file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            ideaModule project.name + ".gametest"

            mods {
                nomowanderer {
                    source sourceSets.main
                    source sourceSets.gametest
                }
            }
        }

        server {
            workingDirectory file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            arg '-nogui'

            mods {
                nomowanderer {
                    source sourceSets.main
                    source sourceSets.gametest
                }
            }
        }

        data {
            workingDirectory file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/')

            mods {
                nomowanderer {
                    source sourceSets.main
                    source sourceSets.gametest
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            ideaModule project.name + ".gametest"

            mods {
                nomowanderer {
                    source sourceSets.main
                    source sourceSets.gametest
                }
            }


        }
    }
}

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    maven { // Curios API
        url 'https://maven.theillusivec4.top/'
    }
    maven {
        // JEI
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${version_mc}-${version_forge}"

    // JEI
    compileOnly fg.deobf("mezz.jei:jei-${version_mc}-forge-api:${version_jei}")
    runtimeOnly fg.deobf("mezz.jei:jei-${version_mc}-forge:${version_jei}")

    // JER
    implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:${version_jer}")

    // Curios
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${version_curios}")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${version_curios}:api")

    // IDAS
//    implementation fg.deobf("curse.maven:idas-605375:4558431")
//    implementation fg.deobf("curse.maven:autoreglib-250363:4100299")
//    implementation fg.deobf("curse.maven:integrated-api-817709:4446914")
//    implementation fg.deobf("curse.maven:create-328085:4550987")
//    implementation fg.deobf("curse.maven:supplementaries-412082:4615838")
//    implementation fg.deobf("curse.maven:quark-243121:4587248")
//    implementation fg.deobf("curse.maven:selene-499980:4620027")

}

def replaceResources = tasks.register("replaceResources", Copy) {
    it.outputs.upToDateWhen { false }
    //Copy it into the build dir
    it.from(sourceSets.main.resources) {
        include "META-INF/mods.toml"
        expand 'version': version, 'mc_version': version_range_mc, 'forge_version': version_range_forge,
                'curios_version': version_range_curios, 'mod_id': mod_id, 'mod_name': mod_name, 'mod_author': mod_author
    }
    it.into "$buildDir/resources/main/"
}

processResources {
    duplicatesStrategy(DuplicatesStrategy.FAIL)
    exclude('META-INF/mods.toml')
    configure { finalizedBy(replaceResources) }
}

classes.configure {
    dependsOn(replaceResources)
}

jar {
    manifest {
        attributes(["Specification-Title"     : mod_id,
                    "Specification-Vendor"    : mod_author,
                    "Specification-Version"   : "1",
                    "Implementation-Title"    : mod_id,
                    "Implementation-Version"  : "${version_mc}_${mod_version}",
                    "Implementation-Vendor"   : mod_author,
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allJava
}

artifacts {
    archives sourcesJar
}

jar.finalizedBy('reobfJar')

task removeWorld(type: Delete) {
    delete "./run/world"
}
